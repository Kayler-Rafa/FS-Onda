<h1><%=title%></h1>

<form id="alunoForm">
    <input required type="hidden" name="id" id="id">
    <label for="name">Nome</label> 
    <input required name="name" id="name" type="text"> <br>
    <label for="race">Raça</label> 
    <input required name="race" id="race" type="text"> <br>
    <label for="colour">Cor</label> 
    <input required name="colour" id="colour" type="text"> <br>
    <label for="gender">Sexo</label> 
    <input required name="gender" id="gender" type="text"> <br>

    <button type="submit">Enviar</button>
    <button type="reset">Cancelar</button>
</form>

<span id="error"></span>

<%if(error){%>
    <span><%=JSON.stringify(error)%></span>
<%}%>

<table>
    <thead>
        <tr>
            <%for(let col of cols){%>
            <th><%=col%></th>
            <%}%>
        </tr>
    </thead>
    <tbody>
        <%for(let aluno of alunos){%>
        <tr>
            <%for(let prop in aluno){%>
            <td><%=aluno[prop]%></td>
            <%}%>
            <td>
                <button onclick="editaluno('<%=aluno.id%>')">Editar</button>
                <button onclick="deletealuno('<%=aluno.id%>')">Deletar</button>
            </td>
        </tr>
        <%}%>
    </tbody>
</table>

<script>
    const form = document.getElementById('alunoForm')

    form.addEventListener("submit", (e)=>{
        e.preventDefault()
        const aluno = mountDataForm()
        let id = aluno.id;
        let METHOD = id ? 'PUT' : 'POST';
        let URL = id ? `/alunos/${id}` : 'alunos';
        
        createOrUpdate(aluno, URL, METHOD)
    })

    function createOrUpdate(aluno, URL, METHOD){
        console.log(aluno)
        fetch(URL, {
            method: METHOD,
            headers: {"Content-Type": "application/json"},
            body: JSON.stringify(aluno)
        })
        .then(async (res)=>{ return await checkError(res) })
        .then((aluno)=>{ 
            form.reset()
            window.location.reload()
        })
        .catch((error)=>{ document.getElementById('error').innerText = error})
    }

    function editaluno(id){
        fetch("/alunos/" + id, {
            method: "GET"
        })
            .then(async (res)=>{ return await checkError(res) })
                .then((aluno)=>{ 
                    console.log('retornou o usuário', aluno) 
                    for(let prop in aluno){
                        const input = document.querySelector(`input[name="${prop}"]`)
                        input ? input.value = aluno[prop] : input.value = ""
                    }
                })
                .catch((error)=>{ document.getElementById('error').innerText = error})
        }
    
        // DELETAR UM aluno PELO ID
        function deletealuno(id){
        fetch("/alunos/" + id, {
            method: "DELETE"
        })
            .then(async (res)=>{ return await checkError(res) })
                .then((aluno)=>{ 
                    window.location.reload()
                })
                .catch((error)=>{ document.getElementById('error').innerText = JSON.stringify(error) })
    }

    // CHECAR ERRO NA RESPOSTA DA REQUISIÇÃO
    async function checkError(res){
        if(!res.ok){
                    const err = await res.json()
                    throw err
                }
                return res.json()
    }

    // MONTAR DADOS DO FORMULÁRIO USANDO FORMDATA
    function mountDataForm(){
        const formData = new FormData(form)
        const aluno = {}
        formData.forEach((v, k)=>{
            aluno[k] = v
        })
        return aluno
    }

</script>