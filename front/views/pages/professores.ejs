<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
</head>
<body>
    <h1><%= title %></h1>

    <!-- Formulário para adicionar/editar professor -->
    <form id="professorForm">
        <input required type="hidden" name="id" id="id">
        <label for="username">Username</label>
        <input required name="username" id="username" type="text"> <br>
        <label for="password">Password</label>
        <input required name="password" id="password" type="password"> <br>
        <label for="email">Email</label>
        <input required name="email" id="email" type="email"> <br>
        <label for="cpf">CPF</label>
        <input required name="cpf" id="cpf" type="text"> <br>
        <label for="materia_prof">Matéria</label>
        <input required name="materia_prof" id="materia_prof" type="text"> <br>

        <button type="submit">Enviar</button>
        <button type="reset">Cancelar</button>
    </form>

    <!-- Exibição de erros -->
    <span id="error"></span>

    <!-- Tabela de professores -->
    <table>
        <thead>
            <tr>
                <% for(let col of cols){ %>
                    <th><%= col %></th>
                <% } %>
                <th>Ações</th>
            </tr>
        </thead>
        <tbody>
            <% for(let professor of professores){ %>
                <tr>
                    <% for(let prop in professor){ %>
                        <td><%= professor[prop] %></td>
                    <% } %>
                    <td>
                        <button onclick="editProfessor('<%= professor.id %>')">Editar</button>
                        <button onclick="deleteProfessor('<%= professor.id %>')">Deletar</button>
                    </td>
                </tr>
            <% } %>
        </tbody>
    </table>

    <script>
        const form = document.getElementById('professorForm');

        form.addEventListener("submit", (e) => {
            e.preventDefault();
            const professor = mountDataForm();
            let id = professor.id;
            let METHOD = id ? 'PUT' : 'POST';
            let URL = id ? `/professores/${id}` : '/professores';

            createOrUpdate(professor, URL, METHOD);
        });

        function createOrUpdate(professor, URL, METHOD){
            fetch(URL, {
                method: METHOD,
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(professor)
            })
            .then(async (res) => {
                return await checkError(res);
            })
            .then(() => {
                form.reset();
                window.location.reload();
            })
            .catch((error) => {
                document.getElementById('error').innerText = error;
            });
        }

        function editProfessor(id){
            fetch(`/professores/${id}`, {
                method: "GET"
            })
            .then(async (res) => {
                return await checkError(res);
            })
            .then((professor) => {
                for (let prop in professor){
                    const input = document.querySelector(`input[name="${prop}"]`);
                    if (input) {
                        input.value = professor[prop];
                    }
                }
            })
            .catch((error) => {
                document.getElementById('error').innerText = error;
            });
        }

        function deleteProfessor(id){
            fetch(`/professores/${id}`, {
                method: "DELETE"
            })
            .then(async (res) => {
                return await checkError(res);
            })
            .then(() => {
                window.location.reload();
            })
            .catch((error) => {
                document.getElementById('error').innerText = JSON.stringify(error);
            });
        }

        async function checkError(res){
            if (!res.ok){
                const err = await res.json();
                throw err;
            }
            return res.json();
        }

        function mountDataForm(){
            const formData = new FormData(form);
            const professor = {};
            formData.forEach((v, k) => {
                professor[k] = v;
            });
            return professor;
        }
    </script>
</body>
</html>
